##Required Libraries
library(ggplot2)
library(ggmosaic)
##Required Functions
n2prop.test<- function(p1, p2, alternative, alpha, power) {
ztwo<- qnorm(1 - alpha/2)
zone<- qnorm(1 - alpha)
zpower<- qnorm(power)
p0<- (p1 + p2)/2
R<- sqrt((2*p0*(1-p0))/((p1*(1-p1) + p2*(1-p2))))
switch(alternative, two.sided = ceiling((zpower + R*ztwo)^2  *(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2), greater = ceiling((zpower + R*zone)^2*(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2), less = ceiling((zpower + R*zone)^2*(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2))
}
n2prop.ci<- function(p1, p2, m, conf.level) {
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
ceiling((z/m)^2*(p1*(1-p1)+p2*(1-p2)))
}
##Required Functions
rr.ci<- function(y, n, conf.level){
y1<- y[1]
y2<- y[2]
n1<- n[1]
n2<- n[2]
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
phat1<- y1/n1
phat2<- y2/n2
rr<- phat1/phat2
selogrr<- sqrt((1-phat1)/(n1*phat1) + (1-phat2)/(n2*phat2))
logrr.lower<- log(rr) - z*selogrr
logrr.upper<- log(rr) + z*selogrr
rr.lower<- exp(logrr.lower)
rr.upper<- exp(logrr.upper)
cat("Estimated Relative Risk = ", rr, "\n")
cat("Confidence Interval for Population Relative Risk = ", rr.lower, rr.upper, "\n")
}
or.ci<- function(y, n, conf.level){
y1<- y[1]
y2<- y[2]
n1<- n[1]
n2<- n[2]
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
phat1<- y1/n1
phat2<- y2/n2
or<- (phat1/(1-phat1))/(phat2/(1-phat2))
selogor<- sqrt(1/(n1*phat1) + 1/(n1*(1-phat1)) + 1/(n2*phat2) + 1/(n2*(1-phat2)))
logor.lower<- log(or) - z*selogor
logor.upper<- log(or) + z*selogor
or.lower<- exp(logor.lower)
or.upper<- exp(logor.upper)
cat("Estimated Odds Ratio = ", or, "\n")
cat("Confidence Interval for Population Odds Ratio = ", or.lower, or.upper, "\n")
}
##Part a
data <- read.csv("WHI.csv")
contingency_table <- table(data$Group, data$Cancer)
print(contingency_table)
proportion_cancer_hormone <- contingency_table["Hormone", "Yes"] / sum(contingency_table["Hormone", ])
proportion_cancer_placebo <- contingency_table["Placebo", "Yes"] / sum(contingency_table["Placebo", ])
# Print the proportions
cat("Proportion of women with cancer in Hormone group:", proportion_cancer_hormone, "\n")
cat("Proportion of women with cancer in Placebo group:", proportion_cancer_placebo, "\n")
##Part b
prop_test <- prop.test(c(contingency_table["Hormone", "Yes"], contingency_table["Placebo", "Yes"]),
c(sum(contingency_table["Hormone", ]), sum(contingency_table["Placebo", ])))
prop_test$statistic
prop_test$p.value
##Part c
prop.test(c(contingency_table["Hormone", "Yes"], contingency_table["Placebo", "Yes"]),
c(sum(contingency_table["Hormone", ]), sum(contingency_table["Placebo", ])),
conf.level = 0.90)$conf.int
##Part c
prop.test(c(contingency_table["Hormone", "Yes"], contingency_table["Placebo", "Yes"]),
c(sum(contingency_table["Hormone", ]), sum(contingency_table["Placebo", ])),
conf.level = 0.90)
##Part d
y <- c(contingency_table["Hormone", "Yes"], contingency_table["Placebo", "Yes"])
n <- c(sum(contingency_table["Hormone", ]), sum(contingency_table["Placebo", ]))
conf_level <- 0.90
rr.ci(y, n, conf_level)
##Part e
or.ci(y, n, conf_level)
##Problem 2
titanic_data <- read.csv("titanic.csv")
##Part a
mosaicplot(table(titanic_data$Ticket, titanic_data$Status), main="Titanic Passenger Rescue Status by Ticket Class", color=TRUE)
##Part a
# Create a mosaic plot
mosaic_plot <- ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Status), na.rm = TRUE, divider = mosaic("v")) +
scale_fill_manual(values = c("Rescued" = "green", "Lost" = "red")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Rescue Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status by Ticket Class")
# Display the mosaic plot
print(mosaic_plot)
##Part a
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Status), na.rm = TRUE, divider = mosaic("v")) +
scale_fill_manual(values = c("Rescued" = "green", "Lost" = "red")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Rescue Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status by Ticket Class")
##Required Libraries
library(ggplot2)
library(ggmosaic)
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Status), na.rm = TRUE, divider = mosaic("v")) +
scale_fill_manual(values = c("Rescued" = "green", "Lost" = "red")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Rescue Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status by Ticket Class")
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Status),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("lightblue", "lightcoral")) +  # Adjust colors as needed
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status given Ticket Class")
##Part a
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Ticket),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status given Ticket Class")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
##Required Libraries
library(ggplot2)
library(ggmosaic)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
##Required Libraries
library(ggplot2)
library(ggmosaic)
##Required Functions
n2prop.test<- function(p1, p2, alternative, alpha, power) {
ztwo<- qnorm(1 - alpha/2)
zone<- qnorm(1 - alpha)
zpower<- qnorm(power)
p0<- (p1 + p2)/2
R<- sqrt((2*p0*(1-p0))/((p1*(1-p1) + p2*(1-p2))))
switch(alternative, two.sided = ceiling((zpower + R*ztwo)^2  *(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2), greater = ceiling((zpower + R*zone)^2*(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2), less = ceiling((zpower + R*zone)^2*(p1*(1-p1)+p2*(1-p2))/(p1-p2)^2))
}
n2prop.ci<- function(p1, p2, m, conf.level) {
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
ceiling((z/m)^2*(p1*(1-p1)+p2*(1-p2)))
}
##Required Functions
rr.ci<- function(y, n, conf.level){
y1<- y[1]
y2<- y[2]
n1<- n[1]
n2<- n[2]
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
phat1<- y1/n1
phat2<- y2/n2
rr<- phat1/phat2
selogrr<- sqrt((1-phat1)/(n1*phat1) + (1-phat2)/(n2*phat2))
logrr.lower<- log(rr) - z*selogrr
logrr.upper<- log(rr) + z*selogrr
rr.lower<- exp(logrr.lower)
rr.upper<- exp(logrr.upper)
cat("Estimated Relative Risk = ", rr, "\n")
cat("Confidence Interval for Population Relative Risk = ", rr.lower, rr.upper, "\n")
}
or.ci<- function(y, n, conf.level){
y1<- y[1]
y2<- y[2]
n1<- n[1]
n2<- n[2]
alpha<- 1 - conf.level
z<- qnorm(1 - alpha/2)
phat1<- y1/n1
phat2<- y2/n2
or<- (phat1/(1-phat1))/(phat2/(1-phat2))
selogor<- sqrt(1/(n1*phat1) + 1/(n1*(1-phat1)) + 1/(n2*phat2) + 1/(n2*(1-phat2)))
logor.lower<- log(or) - z*selogor
logor.upper<- log(or) + z*selogor
or.lower<- exp(logor.lower)
or.upper<- exp(logor.upper)
cat("Estimated Odds Ratio = ", or, "\n")
cat("Confidence Interval for Population Odds Ratio = ", or.lower, or.upper, "\n")
}
##Problem 2
titanic_data <- read.csv("titanic.csv")
##Part a
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Ticket, Status), fill = Ticket),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status given Ticket Class")
##Part a
ggplot(data = titanic_data) +
geom_mosaic(aes(x = product(Status, Ticket), fill = Status),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Ticket Class",
y = "Status",
fill = "Rescue Status",
title = "Mosaic Plot of Rescue Status given Ticket Class")
##Part b
# Create a contingency table for the chi-squared test
contingency_table <- table(titanic_data$Ticket, titanic_data$Status)
# Perform the chi-squared test
chi_squared_test <- chisq.test(contingency_table)
# Extract the test statistic and p-value
test_statistic <- chi_squared_test$statistic
p_value <- chi_squared_test$p.value
# Set the significance level
alpha <- 0.05
# Compare p-value to the significance level
if (p_value < alpha) {
cat("Reject the null hypothesis. There is evidence that the proportion of passengers rescued is different across ticket classes.\n")
} else {
cat("Fail to reject the null hypothesis. There is no significant evidence that the proportion of passengers rescued differs across ticket classes.\n")
}
# Print the test statistic and p-value
cat("Test Statistic:", test_statistic, "\n")
cat("P-value:", p_value, "\n")
chisq.test(contingency_table)
# Create a contingency table for the pairwise comparisons
contingency_table <- table(titanic_data$Ticket, titanic_data$Status)
# Perform pairwise comparisons with Benjamini & Hochberg adjustment
pairwise_test <- pairwise.prop.test(contingency_table[, "Rescued"],
rowSums(contingency_table),
p.adjust.method = "BH")
# Print the results
pairwise_test
##Part b
contingency_table <- table(titanic_data$Ticket, titanic_data$Status)
##Part c
pairwise.prop.test(contingency_table[, "Rescued"],
rowSums(contingency_table),
p.adjust.method = "BH")
##Problem 3
gss_data <- read.csv("GSS.csv")
##Part a
catholic_data <- subset(gss_data, Religion == "Catholic")
conditional_distribution <- table(catholic_data$Wrong) / nrow(catholic_data)
print(conditional_distribution)
##Part b
protestant_data <- subset(gss_data, Religion == "Protestant")
conditional_distribution <- table(protestant_data$Wrong) / nrow(protestant_data)
print(conditional_distribution)
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Religion, Wrong), fill = Wrong),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude Towards Premarital Sex",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Religion, Wrong), fill = Religion),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude Towards Premarital Sex",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Wrong, Religion), fill = Religion),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude Towards Premarital Sex",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Wrong, Religion), fill = Religion),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black", "yellow")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude Towards Premarital Sex",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Wrong, Religion), fill = Wrong),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black", "yellow")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude Towards Premarital Sex",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Wrong, Religion), fill = Wrong),
na.rm = TRUE, divider = mosaic("h"), guide = "uniform") +
scale_fill_manual(values = c("blue", "green", "brown", "black", "yellow")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude",
fill = "Attitude",
title = "Mosaic Plot of Attitudes Towards Premarital Sex by Religious Affiliation")
##Part c
ggplot(data = gss_data) +
geom_mosaic(aes(x = product(Wrong, Religion), fill = Wrong),
na.rm = TRUE, divider = mosaic("h")) +
scale_fill_manual(values = c("blue", "green", "brown", "black", "yellow")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = rel(1.4))) +
theme(axis.title.y = element_text(size = rel(1.2))) +
theme(axis.title.x = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1))) +
theme(axis.text.y = element_text(size = rel(1))) +
theme(strip.text.y = element_text(size = rel(1.2))) +
labs(x = "Religious Affiliation",
y = "Attitude",
fill = "Attitude",
title = "Attitudes Towards Premarital Sex by Religious Affiliation")
# Read the data from the CSV file
gss_data <- read.csv("GSS.csv")
# Create a contingency table for the chi-squared test
contingency_table <- table(gss_data$Religion, gss_data$Wrong)
# Perform the chi-squared test
chi_squared_test <- chisq.test(contingency_table)
# Extract the test statistic and p-value
test_statistic <- chi_squared_test$statistic
p_value <- chi_squared_test$p.value
# Print the results
cat("Chi-squared Test Statistic:", test_statistic, "\n")
cat("P-value:", p_value, "\n")
# Set the significance level
alpha <- 0.05
# Compare p-value to the significance level
if (p_value < alpha) {
cat("Reject the null hypothesis. There is evidence that attitudes towards premarital sex differ among religious affiliation groups.\n")
} else {
cat("Fail to reject the null hypothesis. There is no significant evidence that attitudes towards premarital sex differ among religious affiliation groups.\n")
}
##Part e
expected_freq <- chi_squared_test$expected
cells_less_than_5 <- which(expected_freq < 5, arr.ind = TRUE)
which(expected_freq < 5, arr.ind = TRUE)
